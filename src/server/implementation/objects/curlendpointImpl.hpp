/* Autogenerated with kurento-module-creator */

#ifndef __CURLENDPOINT_IMPL_HPP__
#define __CURLENDPOINT_IMPL_HPP__

#include "UriEndpointImpl.hpp"
#include "curlendpoint.hpp"
#include <EventHandler.hpp>
#include <boost/property_tree/ptree.hpp>
#include <condition_variable>

namespace kurento
{
namespace module
{
namespace curlendpoint
{
class curlendpointImpl;
} /* curlendpoint */
} /* module */
} /* kurento */

namespace kurento
{
void Serialize (std::shared_ptr<kurento::module::curlendpoint::curlendpointImpl> &object, JsonSerializer &serializer);
} /* kurento */

namespace kurento
{
class MediaPipelineImpl;
} /* kurento */

namespace kurento
{
namespace module
{
namespace curlendpoint
{

class curlendpointImpl : public UriEndpointImpl, public virtual curlendpoint
{

public:

  curlendpointImpl (const boost::property_tree::ptree &config,
                    std::shared_ptr<MediaPipeline> mediaPipeline,
                    const std::string &uri);

  virtual ~curlendpointImpl ();
  virtual void curl() override { start(); }
  /* Next methods are automatically implemented by code generator */
  using UriEndpointImpl::connect;
  virtual bool connect (const std::string &eventType,
                        std::shared_ptr<EventHandler> handler) override;
  sigc::signal<void, Recording> signalRecording;
  sigc::signal<void, Paused> signalPaused;
  sigc::signal<void, Stopped> signalStopped;
  virtual void invoke (std::shared_ptr<MediaObjectImpl> obj,
                       const std::string &methodName, const Json::Value &params,
                       Json::Value &response);

  virtual void Serialize (JsonSerializer &serializer);
  
protected:
  virtual void postConstructor () override;
  
private:
  gulong handlerOnStateChanged = 0;
  std::mutex mtx;
  std::condition_variable cv;
  gint state;
  void onStateChanged (gint state);
  
  class StaticConstructor
  {
  public:
    StaticConstructor();
  };

  static StaticConstructor staticConstructor;

};

} /* curlendpoint */
} /* module */
} /* kurento */

#endif /*  __CURLENDPOINT_IMPL_HPP__ */
